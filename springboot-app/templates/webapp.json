{
    "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "subscriptionId": {
            "type": "string"
        },
        "resourceGroupName": {
            "type": "string"
        },
        "name": {
            "type": "string"
        },
        "location": {
            "type": "string"
        },
        "hostingPlanName": {
            "type": "string"
        },
        "appServicePlanName": {
            "type": "string"
        },
        "serverFarmResourceGroup": {
            "type": "string"
        },
        "alwaysOn": {
            "type": "bool"
        },
        "ftpsState": {
            "type": "string"
        },
        "linuxFxVersion": {
            "type": "string"
        },
        "dockerRegistryUrl": {
            "type": "string"
        },
        "dockerRegistryUsername": {
            "type": "string"
        },
        "dockerRegistryPassword": {
            "type": "securestring"
        },
        "dockerRegistryStartupCommand": {
            "type": "string"
        },
        "sku": {
            "type": "string",
        "allowedValues": [
            "Standard",
            "Premium"
            ]
        },
        "svcPlanSize": {
            "type": "string"
        },
        "minimumCapacity": {
            "type": "int"
        },
        "maximumCapacity": {
            "type": "int"
        },
        "defaultCapacity": {
            "type": "int"
        },
        "metricName": {
            "type": "string"
        },
        "metricThresholdToScaleOut": {
            "type": "int"
        },
        "metricThresholdToScaleIn": {
            "type": "int"
        },
        "changePercentScaleOut": {
            "type": "int"
        },
        "changePercentScaleIn": {
            "type": "int"
        },
        "autoscaleEnabled": {
            "type": "bool"
        }
    },
    "variables": {
        "settingName": "[concat(toLower(parameters('svcPlanName')), '-setting')]",
        "targetResourceId": "[resourceId('Microsoft.Web/serverFarms/', parameters('svcPlanName'))]"
    },
    "resources": [
        {
            "type": "Microsoft.Web/serverfarms",
            "apiVersion": "2020-06-01",
            "name": "[parameters('appServicePlanName')]",
            "location": "[parameters('location')]",
            "sku": {
              "name": "[parameters('sku')]"
            },
            "kind": "linux",
            "properties": {
              "reserved": true
            }
        },
        {
            "type": "Microsoft.Insights/autoscalesettings",
            "name": "[variables('settingName')]",
            "dependsOn": [
                "[resourceId('Microsoft.Web/serverfarms', parameters('svcPlanName'))]"
            ],
            "apiVersion": "2014-04-01",
            "location": "[parameters('location')]",
            "properties": {
                "profiles": [
                {
                    "name": "DefaultAutoscaleProfile",
                    "capacity": {
                    "minimum": "[parameters('minimumCapacity')]",
                    "maximum": "[parameters('maximumCapacity')]",
                    "default": "[parameters('defaultCapacity')]"
                    },
                    "rules": [
                    {
                        "metricTrigger": {
                            "metricName": "[parameters('metricName')]",
                            "metricResourceUri": "[variables('targetResourceId')]",
                            "timeGrain": "PT5M",
                            "statistic": "Average",
                            "timeWindow": "PT10M",
                            "timeAggregation": "Average",
                            "operator": "GreaterThan",
                            "threshold": "[parameters('metricThresholdToScaleOut')]"
                        },
                        "scaleAction": {
                            "direction": "Increase",
                            "type": "PercentChangeCount",
                            "value": "[parameters('changePercentScaleOut')]",
                            "cooldown": "PT10M"
                        }
                    },
                    {
                        "metricTrigger": {
                            "metricName": "[parameters('metricName')]",
                            "metricResourceUri": "[variables('targetResourceId')]",
                            "timeGrain": "PT5M",
                            "statistic": "Average",
                            "timeWindow": "PT10M",
                            "timeAggregation": "Average",
                            "operator": "LessThan",
                            "threshold": "[parameters('metricThresholdToScaleIn')]"
                        },
                        "scaleAction": {
                            "direction": "Decrease",
                            "type": "PercentChangeCount",
                            "value": "[parameters('changePercentScaleIn')]",
                            "cooldown": "PT10M"
                        }
                    }
                    ]
                }
                ],
                "enabled": "[parameters('autoscaleEnabled')]",
                "targetResourceUri": "[variables('targetResourceId')]"
            }
        },
        {
            "apiVersion": "2018-11-01",
            "name": "[parameters('name')]",
            "type": "Microsoft.Web/sites",
            "location": "[parameters('location')]",
            "tags": {
                "Owner": "Team1"
            },
            "dependsOn": [],
            "properties": {
                "name": "[parameters('name')]",
                "siteConfig": {
                    "appSettings": [
                        {
                            "name": "DOCKER_REGISTRY_SERVER_URL",
                            "value": "[parameters('dockerRegistryUrl')]"
                        },
                        {
                            "name": "DOCKER_REGISTRY_SERVER_USERNAME",
                            "value": "[parameters('dockerRegistryUsername')]"
                        },
                        {
                            "name": "DOCKER_REGISTRY_SERVER_PASSWORD",
                            "value": "[parameters('dockerRegistryPassword')]"
                        },
                        {
                            "name": "WEBSITES_ENABLE_APP_SERVICE_STORAGE",
                            "value": "false"
                        }
                    ],
                    "linuxFxVersion": "[parameters('linuxFxVersion')]",
                    "appCommandLine": "[parameters('dockerRegistryStartupCommand')]",
                    "alwaysOn": "[parameters('alwaysOn')]",
                    "ftpsState": "[parameters('ftpsState')]",
                    "acrUseManagedIdentityCreds": true
                },
                "serverFarmId": "[concat('/subscriptions/', parameters('subscriptionId'),'/resourcegroups/', parameters('serverFarmResourceGroup'), '/providers/Microsoft.Web/serverfarms/', parameters('hostingPlanName'))]",
                "clientAffinityEnabled": false,
                "virtualNetworkSubnetId": null,
                "httpsOnly": true,
                "publicNetworkAccess": "Disabled"
            }
        }
    ]
}