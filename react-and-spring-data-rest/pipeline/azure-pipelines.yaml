trigger:
  - master
  
resources:
- repo: self

variables:
  dockerRegistryServiceConnection: '<your-service-connection-name>'
  imageRepository: '<your-image-repository>'
  containerRegistry: '<your-acr-name>.azurecr.io'
  dockerfilePath: '$(Build.SourcesDirectory)/Dockerfile'
  tag: '$(Build.BuildId)'

stages:
- stage: Build
  displayName: Build image
  jobs:  
  - job: Build
    displayName: Build
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - task: Docker@2
      displayName: Build and push an image to container registry
      inputs:
        command: buildAndPush
        repository: $(imageRepository)
        dockerfile: $(dockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          $(tag)

- stage: Deploy
  displayName: Deploy to Azure Web App
  dependsOn: Build
  condition: succeeded()
  jobs:
  - deployment: Deploy
    displayName: Deploy
    environment: 'your-azure-webapp-name'
    pool:
      vmImage: 'ubuntu-latest'
    strategy:
      runOnce:
        deploy:
          steps:
          - task: AzureWebAppContainer@1
            inputs:
              appType: 'webAppLinux'
              appName: 'your-azure-webapp-name'
              azureSubscription: 'your-service-connection-name'
              containers: '$(containerRegistry)/$(imageRepository):$(tag)'